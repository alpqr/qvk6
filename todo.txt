bring up metal
revise how clear values are handled (ref, not ptr)
enable Dynamic for non-uniform buffers too (vk/d3d/mtl may be broken atm)
vk: drop staging buffer for immutable buffers
mtl: forcing immut. to Shared should not need multiple backing buffers
immutable-or-not flag for QRhiTexture? (could drop staging alloc after 1st upload when immut.)
vk: verify msaa (onscreen)
figure sg out for minimizing viewport/scissor cmds
d3d device loss
more what-if-resource-rebuilt cases
tex/QImage formats
cubemap
mipmap (gen with compute on vk?)
anisotropic
compressed textures
adopt texture, buffer, ...
more tex: 3d, array
test FrameOpDeviceLost somehow
test depth texture
depth only offscreen
mtl: msaa (onscreen)
gl: more ubuf types
gl: reduce state, reduce texparam
gl: tex size stuff (npot etc.)
gl: texture filtering
gl: depth texture
d3d: texture filtering
d3d: msaa (onscreen)
d3d: tex/sampler for vs
resize to 0 width or height fails (vk)
upgrade vkmemalloc
gl: ubuf structs, arrays
gl: target QOpenGLWindow ...
msaa offscreen (msaa texture? renderbuffer?)
blitframebuffer?
other shader types? (gs?)

qtshaderstack17:
hlsl version to qsb
bytecode (fxc/dxc) for d3d?
bytecode for metal?

+++ done
switch to immutable - static - dynamic buffer types (backends may not care for now)
make clearValues optional in beginPass (when preserving contents for offscreen)
drop front-and-back cull
vk should update lastActiveFrameSlot even when cur.obj is same
exercise indexed drawing
gl setGraphicsPipeline should track srb->generation and issue BindGraphicsPipeline when different
d3d to track buffer, texture, sampler generation and update the buffer/srv/sampler in the batchedbinding lists
d3d setGraphicsPipeline should track srb->generation and issue BindGraphicsPipeline when different
scissor-enable flag
drop triangle fan
do something with offset and size in srb::Binding::uniformBuffer
start d3d11 backend
what if ps is rebuilt
move correctionmatrix to backend
remove some inlines in public api
hide virtuals
remove QVk*Private
buf rebuilt -> srb? srb rebuilt -> ps? texture rebuilt -> texture rt?
hide VkSurfaceKHR from api
vkcmdcopybuffertoimage
test upload+render-to (preserved)
barriers
rendertarget
scheduleRelease -> releaseLater (+ update recreate example)
static buffer -> gpu_only, staging cpu_only, vkCmdCopyBuffer
textures
msaastencil
depth
bring back startBinding
pipeline obj destroy (deferred d.list?)
shader resource if.
topology, cull
blend
